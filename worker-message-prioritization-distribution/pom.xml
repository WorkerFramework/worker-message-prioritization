<!--

    Copyright 2022-2023 Open Text.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

         http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>worker-message-prioritization-aggregator</artifactId>
        <groupId>com.github.workerframework</groupId>
        <version>1.3.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>worker-message-prioritization-distribution</artifactId>
    <packaging>jar</packaging>

    <name>worker-message-prioritization-distribution</name>
    <url>http://maven.apache.org</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>jsr305</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.inject</groupId>
            <artifactId>guice</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.cafapi.logging</groupId>
            <artifactId>caf-logging-logback</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>com.github.workerframework</groupId>
            <artifactId>worker-message-prioritization-rabbitmq</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.workerframework</groupId>
            <artifactId>worker-message-prioritization-target-capacity-calculators</artifactId>
        </dependency>
        <dependency>
            <groupId>com.rabbitmq</groupId>
            <artifactId>amqp-client</artifactId>
        </dependency>
        <dependency>
            <groupId>com.squareup.okhttp</groupId>
            <artifactId>okhttp</artifactId>
        </dependency>
        <dependency>
            <groupId>com.squareup.retrofit</groupId>
            <artifactId>retrofit</artifactId>
        </dependency>
        <dependency>
            <groupId>net.jodah</groupId>
            <artifactId>expiringmap</artifactId>
        </dependency>
        <dependency>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.github.cafdataprocessing</groupId>
            <artifactId>worker-document-interface</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>mockwebserver3</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>mockwebserver3-junit5</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
    
    <build>
        <plugins>
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.19.1</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <systemPropertyVariables>
                        <rabbitmq.node.address>${docker.host.address}</rabbitmq.node.address>
                        <timeout.ms>120000</timeout.ms>
                    </systemPropertyVariables>
                    <environmentVariables>
                        <CAF_RABBITMQ_CTRL_PORT>${rabbitmq.ctrl.port}</CAF_RABBITMQ_CTRL_PORT>
                        <CAF_RABBITMQ_HOST>${docker.host.address}</CAF_RABBITMQ_HOST>
                        <CAF_RABBITMQ_PORT>${rabbitmq.node.port}</CAF_RABBITMQ_PORT>
                        <CAF_RABBITMQ_MGMT_USERNAME>guest</CAF_RABBITMQ_MGMT_USERNAME>
                        <CAF_RABBITMQ_MGMT_PASSWORD>guest</CAF_RABBITMQ_MGMT_PASSWORD>
                        <CAF_RABBITMQ_USERNAME>guest</CAF_RABBITMQ_USERNAME>
                        <CAF_RABBITMQ_PASSWORD>guest</CAF_RABBITMQ_PASSWORD>
                        <CAF_WMP_KUBERNETES_NAMESPACES>private</CAF_WMP_KUBERNETES_NAMESPACES>
                        <CAF_LOG_LEVEL>INFO</CAF_LOG_LEVEL>
                        <CAF_NOOP_MODE>true</CAF_NOOP_MODE>
                        <CAF_MIN_TARGET_QUEUE_LENGTH>100</CAF_MIN_TARGET_QUEUE_LENGTH>
                        <CAF_MAX_TARGET_QUEUE_LENGTH>10000000</CAF_MAX_TARGET_QUEUE_LENGTH>
                        <CAF_ROUNDING_MULTIPLE>100</CAF_ROUNDING_MULTIPLE>
                        <CAF_MAX_CONSUMPTION_RATE_HISTORY_SIZE>100</CAF_MAX_CONSUMPTION_RATE_HISTORY_SIZE>
                        <CAF_MIN_CONSUMPTION_RATE_HISTORY_SIZE>10</CAF_MIN_CONSUMPTION_RATE_HISTORY_SIZE>
                        <CAF_QUEUE_PROCESSING_TIME_GOAL_SECONDS>300</CAF_QUEUE_PROCESSING_TIME_GOAL_SECONDS>
                        <TUNED_TARGET_LOG_LEVEL>DEBUG</TUNED_TARGET_LOG_LEVEL>
                        <CAF_RABBITMQ_MGMT_URL>http://localhost:25673</CAF_RABBITMQ_MGMT_URL>
                    </environmentVariables>
                </configuration>
            </plugin>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.40.2</version>
                <executions>
                    <!-- Build the container in compile phase. -->
                    <execution>
                        <id>build-docker-container</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                    <!-- Start the containers in pre-integration-test phase. -->
                    <execution>
                        <id>start-docker-containers</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>start</goal>
                        </goals>
                    </execution>
                    <!-- Stop the containers in post-integration-test phase. -->
                    <execution>
                        <id>stop-docker-containers</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                            <goal>volume-remove</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <autoPull>on</autoPull>
                    <containerNamePattern>%a-%t</containerNamePattern>
                    <verbose>true</verbose>
                    <images>
                        <!-- Build a RabbitMQ image with the shovel plugins enabled for testing purposes -->
                        <image>
                            <alias>rabbitmq</alias>
                            <name>dev/rabbitmq-with-shovel-plugin</name>
                            <build>
                                <dockerFile>${project.basedir}/src/test/docker/Dockerfile</dockerFile>
                                <args>
                                    <RABBITMQ_IMAGE>${dockerHubPublic}/library/rabbitmq:3-management</RABBITMQ_IMAGE>
                                </args>
                            </build>
                            <run>
                                <ports>
                                    <port>${rabbitmq.ctrl.port}:15672</port>
                                    <port>${rabbitmq.node.port}:5672</port>
                                </ports>
                                <wait>
                                    <log>Server startup complete</log>
                                    <http>
                                        <url>http://${docker.host.address}:${rabbitmq.ctrl.port}</url>
                                    </http>
                                    <time>120000</time>
                                    <shutdown>500</shutdown>
                                </wait>
                                <log>
                                    <enabled>true</enabled>
                                </log>
                            </run>
                        </image>
                    </images>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <mainClass>com.github.workerframework.workermessageprioritization.redistribution.lowlevel.LowLevelApplication</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
