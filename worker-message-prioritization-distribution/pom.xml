<!--

    Copyright 2022-2024 Open Text.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

         http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>worker-message-prioritization-aggregator</artifactId>
        <groupId>com.github.workerframework</groupId>
        <version>2.2.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>worker-message-prioritization-distribution</artifactId>
    <packaging>jar</packaging>

    <name>worker-message-prioritization-distribution</name>
    <url>http://maven.apache.org</url>

    <dependencies>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <scope>runtime</scope>  <!-- Used by the unit tests but has to be declared runtime-scope because it is also transitive -->
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.inject</groupId>
            <artifactId>guice</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.cafapi.logging</groupId>
            <artifactId>caf-logging-logback</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>com.github.cafapi.common</groupId>
            <artifactId>util-secret</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.workerframework</groupId>
            <artifactId>worker-message-prioritization-rabbitmq</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.workerframework</groupId>
            <artifactId>worker-message-prioritization-target-capacity-calculators</artifactId>
        </dependency>
        <dependency>
            <groupId>com.rabbitmq</groupId>
            <artifactId>amqp-client</artifactId>
        </dependency>
        <dependency>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.github.cafdataprocessing.workers.document</groupId>
            <artifactId>worker-document-interface</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>mockwebserver3</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>mockwebserver3-junit5</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- mockito-inline is used to mock static methods -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-inline</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
    
    <build>
        <plugins>
<!--      The below plugin can be used for testing instead of mocked environment variables in StagingQueueWeightCalculatorTest.java-->
<!--            <plugin>-->
<!--                <groupId>org.apache.maven.plugins</groupId>-->
<!--                <artifactId>maven-surefire-plugin</artifactId>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <id>fastLaneTesting</id>-->
<!--                        <phase>test</phase>-->
<!--                        <goals>-->
<!--                            <goal>test</goal>-->
<!--                        </goals>-->
<!--                        <configuration>-->
<!--                            <includes>-->
<!--                                <include>**/*StagingQueueWeightCalculatorTest*.java</include>-->
<!--                            </includes>-->
<!--                        </configuration>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--                <configuration>-->
<!--                    <environmentVariables>-->
<!--                        <CAF_ADJUST_QUEUE_WEIGHT>enrichment\-workflow$,10</CAF_ADJUST_QUEUE_WEIGHT>-->
<!--                        <CAF_ADJUST_QUEUE_WEIGHT_1>clynch,0</CAF_ADJUST_QUEUE_WEIGHT_1>-->
<!--                        <CAF_ADJUST_QUEUE_WEIGHT_2>a77777,3</CAF_ADJUST_QUEUE_WEIGHT_2>-->
<!--                        <CAF_ADJUST_QUEUE_WEIGHT_3>dataprocessing-langdetect-in,7</CAF_ADJUST_QUEUE_WEIGHT_3>-->
<!--                        <CAF_ADJUST_QUEUE_WEIGHT_4>repository-initialization-workflow$,0.5</CAF_ADJUST_QUEUE_WEIGHT_4>-->
<!--                    </environmentVariables>-->
<!--                </configuration>-->
<!--            </plugin>-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <systemPropertyVariables>
                        <timeout.ms>120000</timeout.ms>
                    </systemPropertyVariables>
                    <environmentVariables>
                        <CAF_RABBITMQ_CTRL_PORT>${rabbitmq.ctrl.port}</CAF_RABBITMQ_CTRL_PORT>
                        <CAF_RABBITMQ_HOST>${docker.host.address}</CAF_RABBITMQ_HOST>
                        <CAF_RABBITMQ_PORT>${rabbitmq.node.port}</CAF_RABBITMQ_PORT>
                        <CAF_RABBITMQ_MGMT_USERNAME>guest</CAF_RABBITMQ_MGMT_USERNAME>
                        <CAF_RABBITMQ_MGMT_PASSWORD>guest</CAF_RABBITMQ_MGMT_PASSWORD>
                        <CAF_RABBITMQ_USERNAME>guest</CAF_RABBITMQ_USERNAME>
                        <CAF_RABBITMQ_PASSWORD>guest</CAF_RABBITMQ_PASSWORD>
                        <CAF_WMP_KUBERNETES_NAMESPACES>private</CAF_WMP_KUBERNETES_NAMESPACES>
                        <CAF_LOG_LEVEL>INFO</CAF_LOG_LEVEL>
                        <CAF_ENABLE_TARGET_QUEUE_LENGTH_TUNING>false</CAF_ENABLE_TARGET_QUEUE_LENGTH_TUNING>
                        <CAF_MIN_TARGET_QUEUE_LENGTH>100</CAF_MIN_TARGET_QUEUE_LENGTH>
                        <CAF_MAX_TARGET_QUEUE_LENGTH>10000000</CAF_MAX_TARGET_QUEUE_LENGTH>
                        <CAF_ROUNDING_MULTIPLE>100</CAF_ROUNDING_MULTIPLE>
                        <CAF_MAX_CONSUMPTION_RATE_HISTORY_SIZE>100</CAF_MAX_CONSUMPTION_RATE_HISTORY_SIZE>
                        <CAF_MIN_CONSUMPTION_RATE_HISTORY_SIZE>10</CAF_MIN_CONSUMPTION_RATE_HISTORY_SIZE>
                        <CAF_QUEUE_PROCESSING_TIME_GOAL_SECONDS>300</CAF_QUEUE_PROCESSING_TIME_GOAL_SECONDS>
                        <TUNED_TARGET_LOG_LEVEL>DEBUG</TUNED_TARGET_LOG_LEVEL>
                        <CAF_RABBITMQ_MGMT_URL>http://${docker.host.address}:${rabbitmq.ctrl.port}</CAF_RABBITMQ_MGMT_URL>
                    </environmentVariables>
                </configuration>
            </plugin>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <executions>
                    <!-- Build the container in compile phase. -->
                    <execution>
                        <id>build-docker-container</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                    <!-- Start the containers in pre-integration-test phase. -->
                    <execution>
                        <id>start-docker-containers</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>start</goal>
                        </goals>
                    </execution>
                    <!-- Stop the containers in post-integration-test phase. -->
                    <execution>
                        <id>stop-docker-containers</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                            <goal>volume-remove</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <autoPull>on</autoPull>
                    <containerNamePattern>%a-%t</containerNamePattern>
                    <verbose>true</verbose>
                    <images>
                        <!-- Run the RabbitMQ image -->
                        <image>
                            <alias>rabbitmq</alias>
                            <name>${projectDockerRegistry}/library/rabbitmq</name>
                            <run>
                                <ports>
                                    <port>${rabbitmq.ctrl.port}:15672</port>
                                    <port>${rabbitmq.node.port}:5672</port>
                                </ports>
                                <wait>
                                    <log>Server startup complete</log>
                                    <http>
                                        <url>http://${docker.host.address}:${rabbitmq.ctrl.port}</url>
                                    </http>
                                    <time>120000</time>
                                    <shutdown>500</shutdown>
                                </wait>
                                <log>
                                    <enabled>true</enabled>
                                </log>
                            </run>
                        </image>
                    </images>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <mainClass>com.github.workerframework.workermessageprioritization.redistribution.lowlevel.LowLevelApplication</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
